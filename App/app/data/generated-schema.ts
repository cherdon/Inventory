/* do not change this file directly, it is auto generated by `yarn run generate-schema`. */

import { z } from 'zod';

export const schema = {
  config: z
    .object({
      uuid: z.string(),
      rfid_tag_company_prefix: z.string().regex(new RegExp('^[0-9]{6,12}$')),
      rfid_tag_prefix: z.string().regex(new RegExp('^[0-9]{0,3}$')),
      rfid_tag_access_password: z.string().regex(new RegExp('^[a-f0-9]{8}$')),
      rfid_tag_access_password_encoding: z
        .string()
        .regex(new RegExp('^[a-f0-9]{8}$')),
      collections_order: z.array(z.string()),
    })
    .catchall(z.unknown()),
  collection: z
    .object({
      name: z.string().min(1),
      icon_name: z.string(),
      icon_color: z.string(),
      collection_reference_number: z.string().regex(new RegExp('^[0-9]{2,4}$')),
      item_default_icon_name: z.string().optional(),
    })
    .catchall(z.unknown()),
  item: z
    .object({
      name: z.string().min(1),
      icon_name: z.string(),
      icon_color: z.string(),
      collection_id: z.string(),
      item_reference_number: z.string().optional(),
      serial: z.string().optional(),
      _individual_asset_reference: z.string().optional(),
      epc_tag_uri: z.string().optional(),
      epc_tag_uri_manually_set: z.boolean().optional(),
      rfid_tag_epc_memory_bank_contents: z
        .string()
        .regex(new RegExp('^[A-F0-9]+$'))
        .optional(),
      rfid_tag_epc_memory_bank_contents_manually_set: z.boolean().optional(),
      actual_rfid_tag_epc_memory_bank_contents: z
        .string()
        .regex(new RegExp('^[A-F0-9]+$'))
        .optional(),
      item_type: z
        .enum(['container', 'generic_container', 'item_with_parts'])
        .optional(),
      dedicated_container_id: z.string().optional(),
    })
    .catchall(z.unknown()),
};

export default schema;
