name: CI
on:
  push:
    branches:
    - main
    paths-ignore:
      - '**/README.md'
  pull_request:
    branches:
    - main
    paths-ignore:
      - '**/README.md'
  release:
    types: [published]
  # schedule:
  #   - cron: '*/5 * * * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test-data:
    name: "Test: Data"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18.15.0
    - name: Cache node_modules
      uses: actions/cache@v3
      env:
        cache-name: data-node_modules
      with:
        path: Data/node_modules
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('Data/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ env.cache-name }}-
    - name: Yarn Install
      run: |
        cd Data
        yarn install
    - name: Typecheck
      run: |
        cd Data
        yarn run typecheck
    - name: Test
      run: |
        cd Data
        yarn test

  test-app:
    name: "Test: App"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18.15.0
    - name: Cache node_modules
      uses: actions/cache@v3
      env:
        cache-name: app-node_modules
      with:
        path: App/node_modules
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('App/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ env.cache-name }}-
    - name: Yarn Install
      run: |
        cd App
        yarn install
    - name: Typecheck
      run: |
        cd App
        yarn run typecheck
    - name: Test
      run: |
        cd App
        yarn test

  test-epc-utils:
    name: "Test: epc-utils"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18.15.0
    - name: Cache node_modules
      uses: actions/cache@v3
      env:
        cache-name: epc-utils-node_modules
      with:
        path: packages/epc-utils/node_modules
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('packages/epc-utils/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ env.cache-name }}-
    - name: Yarn Install
      run: |
        cd packages/epc-utils
        yarn install
    - name: Typecheck
      run: |
        cd packages/epc-utils
        yarn run typecheck
    - name: Test
      run: |
        cd packages/epc-utils
        yarn test

  generate-changelog:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18.15.0
    - name: Generate Changelog
      env:
        # See: https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      run: |
        node .github/workflows/scripts/generate-changelog-from-github-context.js "$GITHUB_CONTEXT" > changelog.txt
    - name: Show changelog.txt
      run: |
        cat changelog.txt
    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v3
      with:
        name: changelog
        path: changelog.txt

  build-android:
    name: "Build Android"
    runs-on: ubuntu-latest
    needs:
    - test-app
    - generate-changelog
    steps:
    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'
    - name: Setup Android SDK
      uses: android-actions/setup-android@v2
    - uses: actions/checkout@v1
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18.15.0
    - name: Cache node_modules
      uses: actions/cache@v3
      env:
        cache-name: app-node_modules
      with:
        path: App/node_modules
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('App/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ env.cache-name }}-
    - name: Yarn Install
      run: |
        cd App
        yarn install
    - name: Get Changelog
      uses: actions/download-artifact@v3
      with:
        name: changelog
        path: App
    - name: Prepare Keystore
      run: |
        mkdir -p ~/.gradle
        echo "${{ secrets.GRADLE_PROPERTIES }}" > ~/.gradle/gradle.properties
        mkdir -p App/android/app
        echo "${{ secrets.DEV_KEYSTORE_BASE64 }}" > App/android/app/dev.keystore.base64
        base64 --decode App/android/app/dev.keystore.base64 > App/android/app/dev.keystore
    - name: Build Android
      run: |
        cd App
        cd android
        ./gradlew assembleRelease
    - name: Upload Built APK
      uses: actions/upload-artifact@v3
      with:
        name: android-app-apk
        path: App/android/app/build/outputs/apk/release/app-release.apk

  build-ios:
    name: "Build iOS"
    runs-on: macos-latest
    timeout-minutes: 60
    needs:
    - test-app
    - generate-changelog
    steps:
    - uses: actions/checkout@v1
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18.15.0
    - name: Cache node_modules
      uses: actions/cache@v3
      env:
        cache-name: app-node_modules
      with:
        path: App/node_modules
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('App/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ env.cache-name }}-
    - name: Yarn Install
      run: |
        cd App
        yarn install
    - name: Get Changelog
      uses: actions/download-artifact@v3
      with:
        name: changelog
        path: App
    - name: Prepare config.xcconfig
      run: |
        echo "${{ secrets.CONFIG_XCCONFIG }}" > App/ios/config.xcconfig
        echo "MARKETING_VERSION = 0.1.2" >> App/ios/config.xcconfig
        echo "CURRENT_PROJECT_VERSION = 10" >> App/ios/config.xcconfig
        echo "${{ secrets.AUTHKEY_P8_BASE64 }}" > ~/AuthKey.p8.base64
        base64 --decode ~/AuthKey.p8.base64 > ~/AuthKey.p8
    - name: Cache Pods
      uses: actions/cache@v3
      env:
        cache-name: app-pods
      with:
        path: App/ios/Pods
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('App/ios/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ env.cache-name }}-
    - name: Pod Install
      env:
        USE_BUILDCACHE: true
      run: |
        cd App
        bash scripts/pod-install.sh
    - name: Install Fastlane
      run: |
        cd App/ios
        bundle install
        # Patch cert_checker.rb to not print out sensitive information.
        # See: https://github.com/fastlane/fastlane/issues/21351
        FASTLANE_PATH="$(bundle show fastlane)"
        FASTLANE_PATH_CERT_CHECKER_PATH="$FASTLANE_PATH/fastlane_core/lib/fastlane_core/cert_checker.rb"
        if [[ -f "$FASTLANE_PATH_CERT_CHECKER_PATH" ]]; then
          patch --force "$FASTLANE_PATH_CERT_CHECKER_PATH" < fastlane/cert_checker.patch
        else
          exit 1
        fi
    - name: Set Sync Code Signing Git SSH Key
      env:
        SYNC_CODE_SIGNING_GIT_SSH_KEY: ${{ secrets.SYNC_CODE_SIGNING_GIT_SSH_KEY }}
      run: |
        ssh-agent sh -c 'echo "$SYNC_CODE_SIGNING_GIT_SSH_KEY"' | ssh-add -
    - uses: mikehardy/buildcache-action@v2
    # - name: Cache Xcode DerivedData
    #   uses: actions/cache@v3
    #   env:
    #     cache-name: xcode-derived-data-nightly
    #   with:
    #     path: /Users/runner/Library/Developer/Xcode/DerivedData
    #     key: ${{ runner.os }}-${{ env.cache-name }}
    # # For cached DerivedData to work, restore the modification time of the files to their last change commit time in Git.
    # - uses: chetan/git-restore-mtime-action@v2
    - name: Fastlane Nightly
      env:
        CI: true
        SYNC_CODE_SIGNING_GIT_URL: ${{ secrets.SYNC_CODE_SIGNING_GIT_URL }}
        # The passphrase to decrypt the profiles stored in Git repo.
        # See: https://docs.fastlane.tools/actions/sync_code_signing/#passphrase
        MATCH_PASSWORD: ${{ secrets.SYNC_CODE_SIGNING_GIT_PASSPHRASE }}
        SKIP_UPLOAD_TO_TESTFLIGHT: true
      run: |
        cd App/ios
        bundle exec fastlane nightly
    - name: Show Error Log
      if: ${{ failure() }}
      run: |
        cat '/Users/runner/Library/Logs/gym/Inventory-Inventory (Nightly).log' || :
    - name: Upload Archive
      uses: actions/upload-artifact@v3
      with:
        name: ios-archive
        path: |
          App/ios/*.xcarchive
          App/ios/*.xcarchive.zip
          App/*.xcarchive
          App/*.xcarchive.zip
    - name: Upload Built IPA
      uses: actions/upload-artifact@v3
      with:
        name: ios-app-ipa
        path: |
          App/ios/Inventory.ipa
          App/ios/Inventory.app.dSYM.zip
    - name: Upload to TestFlight
      continue-on-error: true
      env:
        CI: true
      run: |
        cd App/ios
        bundle exec fastlane lane_upload_to_testflight
